const { Pool } = require('pg');
const pool = new Pool({
    host: 'localhost',
    port: 5432,
    database: 'project_management',
    user: 'postgres',
    password: 'password'
});

async function debugProjectCreation() {
    console.log('üîç –ù–∞—á–∏–Ω–∞–µ–º –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞...\n');
    
    try {
        // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
        console.log('1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î...');
        const client = await pool.connect();
        console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —É—Å–ø–µ—à–Ω–æ\n');
        
        // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è-–∑–∞–∫–∞–∑—á–∏–∫–∞
        console.log('2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è-–∑–∞–∫–∞–∑—á–∏–∫–∞...');
        const customerQuery = `
            SELECT id, telegram_id, username, first_name, last_name, main_role 
            FROM users 
            WHERE main_role = 'customer' 
            LIMIT 1
        `;
        const customerResult = await client.query(customerQuery);
        
        if (customerResult.rows.length === 0) {
            console.log('‚ùå –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ä–æ–ª—å—é customer');
            return;
        }
        
        const customer = customerResult.rows[0];
        console.log('‚úÖ –ù–∞–π–¥–µ–Ω –∑–∞–∫–∞–∑—á–∏–∫:', {
            id: customer.id,
            telegram_id: customer.telegram_id,
            username: customer.username,
            name: `${customer.first_name} ${customer.last_name}`,
            role: customer.main_role
        });
        
        // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ @Aleksey_Barsukov_development
        console.log('\n3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ @Aleksey_Barsukov_development...');
        const managerQuery = `
            SELECT id, telegram_id, username, first_name, last_name, main_role,
                   specialization, experience, skills, salary_range, contacts
            FROM users 
            WHERE username = 'Aleksey_Barsukov_development'
        `;
        const managerResult = await client.query(managerQuery);
        
        if (managerResult.rows.length === 0) {
            console.log('‚ùå –ú–µ–Ω–µ–¥–∂–µ—Ä @Aleksey_Barsukov_development –Ω–µ –Ω–∞–π–¥–µ–Ω');
        } else {
            const manager = managerResult.rows[0];
            console.log('‚úÖ –ù–∞–π–¥–µ–Ω –º–µ–Ω–µ–¥–∂–µ—Ä:', {
                id: manager.id,
                telegram_id: manager.telegram_id,
                username: manager.username,
                name: `${manager.first_name} ${manager.last_name}`,
                role: manager.main_role,
                specialization: manager.specialization,
                salary_range: manager.salary_range,
                contacts: manager.contacts
            });
        }
        
        // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã projects
        console.log('\n4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã projects...');
        const tableQuery = `
            SELECT column_name, data_type, is_nullable, column_default
            FROM information_schema.columns 
            WHERE table_name = 'projects' 
            ORDER BY ordinal_position
        `;
        const tableResult = await client.query(tableQuery);
        console.log('–°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã projects:');
        tableResult.rows.forEach(col => {
            console.log(`  ${col.column_name}: ${col.data_type} ${col.is_nullable === 'YES' ? 'NULL' : 'NOT NULL'}`);
        });
        
        // 5. –ü—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç
        console.log('\n5. –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞...');
        const testProjectData = {
            name: 'DNS',
            description: '–Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ä–≤–µ—Ä–æ–≤',
            customer_id: customer.id,
            status: 'draft',
            deadline: '–¥–æ 30.07.2025',
            budget: '70 000 —Ä—É–±.',
            manager_requirements: '–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã —Å —Å–µ—Ä–≤–µ—Ä–∞–º–∏',
            work_conditions: '–£–¥–∞–ª–µ–Ω–Ω–æ',
            additional_notes: null
        };
        
        console.log('–î–∞–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç–∞:', testProjectData);
        
        const createQuery = `
            INSERT INTO projects (name, description, customer_id, status, deadline, budget, manager_requirements, work_conditions, additional_notes)
            VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9)
            RETURNING *
        `;
        
        const createValues = [
            testProjectData.name,
            testProjectData.description,
            testProjectData.customer_id,
            testProjectData.status,
            testProjectData.deadline,
            testProjectData.budget,
            testProjectData.manager_requirements,
            testProjectData.work_conditions,
            testProjectData.additional_notes
        ];
        
        console.log('–í—ã–ø–æ–ª–Ω—è–µ–º INSERT...');
        const createResult = await client.query(createQuery, createValues);
        console.log('‚úÖ –ü—Ä–æ–µ–∫—Ç —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ:', createResult.rows[0]);
        
        const projectId = createResult.rows[0].id;
        
        // 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π
        console.log('\n6. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–æ–ª–µ–π...');
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–∫–∞–∑—á–∏–∫–∞ –∫–∞–∫ customer (–ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç—Å—è –≤ addUserToProjectRoles)
        console.log('–î–æ–±–∞–≤–ª—è–µ–º –∑–∞–∫–∞–∑—á–∏–∫–∞ –∫–∞–∫ customer (–ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç—Å—è)...');
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–∫–∞–∑—á–∏–∫–∞ –∫–∞–∫ manager
        console.log('–î–æ–±–∞–≤–ª—è–µ–º –∑–∞–∫–∞–∑—á–∏–∫–∞ –∫–∞–∫ manager...');
        const addManagerQuery = `
            INSERT INTO project_members (user_id, project_id, role)
            VALUES ($1, $2, $3)
            ON CONFLICT (project_id, user_id) DO UPDATE SET role = $3
        `;
        await client.query(addManagerQuery, [customer.id, projectId, 'manager']);
        console.log('‚úÖ –ó–∞–∫–∞–∑—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω –∫–∞–∫ manager');
        
        // 7. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –≤ project_managers
        console.log('\n7. –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –≤ project_managers...');
        const pmQuery = `
            INSERT INTO project_managers (project_id, manager_id, status)
            VALUES ($1, $2, $3)
            RETURNING *
        `;
        const pmResult = await client.query(pmQuery, [projectId, customer.id, 'accepted']);
        console.log('‚úÖ –ó–∞–ø–∏—Å—å –≤ project_managers —Å–æ–∑–¥–∞–Ω–∞:', pmResult.rows[0]);
        
        // 8. –ï—Å–ª–∏ –µ—Å—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä, –ø—Ä–æ–±—É–µ–º –¥–æ–±–∞–≤–∏—Ç—å –µ–≥–æ
        if (managerResult.rows.length > 0) {
            console.log('\n8. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞...');
            
            // –î–æ–±–∞–≤–ª—è–µ–º –≤ project_members
            await client.query(addManagerQuery, [managerResult.rows[0].id, projectId, 'manager']);
            console.log('‚úÖ –ú–µ–Ω–µ–¥–∂–µ—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ project_members');
            
            // –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ project_managers
            const inviteQuery = `
                INSERT INTO project_managers (project_id, manager_id, status)
                VALUES ($1, $2, $3)
                RETURNING *
            `;
            const inviteResult = await client.query(inviteQuery, [projectId, managerResult.rows[0].id, 'pending']);
            console.log('‚úÖ –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ:', inviteResult.rows[0]);
        }
        
        // 9. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        console.log('\n9. –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞...');
        const finalQuery = `
            SELECT p.*, 
                   array_agg(DISTINCT pm.role) as member_roles,
                   array_agg(DISTINCT pm2.status) as manager_statuses
            FROM projects p
            LEFT JOIN project_members pm ON p.id = pm.project_id
            LEFT JOIN project_managers pm2 ON p.id = pm2.project_id
            WHERE p.id = $1
            GROUP BY p.id
        `;
        const finalResult = await client.query(finalQuery, [projectId]);
        console.log('–§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:', finalResult.rows[0]);
        
        // 10. –û—á–∏—Å—Ç–∫–∞ - —É–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç
        console.log('\n10. –û—á–∏—Å—Ç–∫–∞ - —É–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç...');
        await client.query('DELETE FROM project_managers WHERE project_id = $1', [projectId]);
        await client.query('DELETE FROM project_members WHERE project_id = $1', [projectId]);
        await client.query('DELETE FROM projects WHERE id = $1', [projectId]);
        console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç —É–¥–∞–ª–µ–Ω');
        
        console.log('\nüéâ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ! –í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ—à–ª–∏ –±–µ–∑ –æ—à–∏–±–æ–∫.');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–µ:', error);
        console.error('Stack trace:', error.stack);
    } finally {
        await pool.end();
    }
}

debugProjectCreation(); 