const User = require('../../db/models/User');
const { roleSelectionKeyboard, getKeyboardByRole } = require('../keyboards');
const { validateRole } = require('../../utils/validation');

const startCommand = async (ctx) => {
    try {
        const telegramId = ctx.from.id;
        const username = ctx.from.username;
        const firstName = ctx.from.first_name;
        const lastName = ctx.from.last_name;

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        let user = await User.findByTelegramId(telegramId);

        if (!user) {
            // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–µ–∑ –æ—Å–Ω–æ–≤–Ω–æ–π —Ä–æ–ª–∏
            user = await User.create(telegramId, username, firstName, lastName, null);
            
            await ctx.reply(
                'üöÄ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞–º–∏!</b>\n\n' +
                '–í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å, –∫–æ—Ç–æ—Ä–∞—è –ª—É—á—à–µ –≤—Å–µ–≥–æ –æ–ø–∏—Å—ã–≤–∞–µ—Ç –≤–∞—à–∏ —Ü–µ–ª–∏:\n\n' +
                'üë§ <b>–ó–∞–∫–∞–∑—á–∏–∫</b>\n' +
                '‚Ä¢ –£ –≤–∞—Å –µ—Å—Ç—å –∏–¥–µ—è –ø—Ä–æ–µ–∫—Ç–∞ –∏ –Ω—É–∂–Ω–∞ –∫–æ–º–∞–Ω–¥–∞\n' +
                '‚Ä¢ –ò—â–µ—Ç–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –¥–ª—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∑–∞–¥–∞—á\n' +
                '‚Ä¢ –•–æ—Ç–∏—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏\n\n' +
                'üë®‚Äçüíº <b>–ú–µ–Ω–µ–¥–∂–µ—Ä</b>\n' +
                '‚Ä¢ –ò–º–µ–µ—Ç–µ –æ–ø—ã—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥–∞–º–∏\n' +
                '‚Ä¢ –£–º–µ–µ—Ç–µ –∫–æ–æ—Ä–¥–∏–Ω–∏—Ä–æ–≤–∞—Ç—å —Ä–∞–±–æ—Ç—É –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π\n' +
                '‚Ä¢ –ì–æ—Ç–æ–≤—ã –±—Ä–∞—Ç—å –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ –ø—Ä–æ–µ–∫—Ç—ã\n\n' +
                'üë∑ <b>–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å</b>\n' +
                '‚Ä¢ –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ, –¥–∏–∑–∞–π–Ω, –∞–Ω–∞–ª–∏—Ç–∏–∫–∞\n' +
                '‚Ä¢ –ì–æ—Ç–æ–≤—ã –≤—ã–ø–æ–ª–Ω—è—Ç—å –∑–∞–¥–∞—á–∏ –≤ –∫–æ–º–∞–Ω–¥–µ\n' +
                '‚Ä¢ –ò—â–µ—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã –¥–ª—è —É—á–∞—Å—Ç–∏—è',
                {
                    parse_mode: 'HTML',
                    reply_markup: roleSelectionKeyboard.reply_markup
                }
            );
        } else if (!user.main_role) {
            // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –Ω–æ –æ—Å–Ω–æ–≤–Ω–∞—è —Ä–æ–ª—å –Ω–µ –≤—ã–±—Ä–∞–Ω–∞
            await ctx.reply(
                'üëã <b>–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º!</b>\n\n' +
                '–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à—É —Ä–æ–ª—å:\n\n' +
                'üë§ <b>–ó–∞–∫–∞–∑—á–∏–∫</b>\n' +
                '‚Ä¢ –£ –≤–∞—Å –µ—Å—Ç—å –∏–¥–µ—è –ø—Ä–æ–µ–∫—Ç–∞ –∏ –Ω—É–∂–Ω–∞ –∫–æ–º–∞–Ω–¥–∞\n' +
                '‚Ä¢ –ò—â–µ—Ç–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –¥–ª—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∑–∞–¥–∞—á\n' +
                '‚Ä¢ –•–æ—Ç–∏—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏\n\n' +
                'üë®‚Äçüíº <b>–ú–µ–Ω–µ–¥–∂–µ—Ä</b>\n' +
                '‚Ä¢ –ò–º–µ–µ—Ç–µ –æ–ø—ã—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥–∞–º–∏\n' +
                '‚Ä¢ –£–º–µ–µ—Ç–µ –∫–æ–æ—Ä–¥–∏–Ω–∏—Ä–æ–≤–∞—Ç—å —Ä–∞–±–æ—Ç—É –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π\n' +
                '‚Ä¢ –ì–æ—Ç–æ–≤—ã –±—Ä–∞—Ç—å –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ –ø—Ä–æ–µ–∫—Ç—ã\n\n' +
                'üë∑ <b>–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å</b>\n' +
                '‚Ä¢ –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ, –¥–∏–∑–∞–π–Ω, –∞–Ω–∞–ª–∏—Ç–∏–∫–∞\n' +
                '‚Ä¢ –ì–æ—Ç–æ–≤—ã –≤—ã–ø–æ–ª–Ω—è—Ç—å –∑–∞–¥–∞—á–∏ –≤ –∫–æ–º–∞–Ω–¥–µ\n' +
                '‚Ä¢ –ò—â–µ—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã –¥–ª—è —É—á–∞—Å—Ç–∏—è',
                {
                    parse_mode: 'HTML',
                    reply_markup: roleSelectionKeyboard.reply_markup
                }
            );
        } else {
            // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∏–º–µ–µ—Ç –æ—Å–Ω–æ–≤–Ω—É—é —Ä–æ–ª—å
            const roleNames = {
                'customer': '–ó–∞–∫–∞–∑—á–∏–∫',
                'manager': '–ú–µ–Ω–µ–¥–∂–µ—Ä',
                'executor': '–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å'
            };

            await ctx.reply(
                `üëã <b>–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, ${firstName}!</b>\n\n` +
                `–í–∞—à–∞ —Ä–æ–ª—å: <b>${roleNames[user.main_role]}</b>\n\n` +
                '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:',
                {
                    parse_mode: 'HTML',
                    reply_markup: getKeyboardByRole(user.main_role).reply_markup
                }
            );
        }
    } catch (error) {
        console.error('Error in start command:', error);
        await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    }
};

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ä–æ–ª–∏
const handleRoleSelection = async (ctx) => {
    try {
        const roleMap = {
            'üë§ –ó–∞–∫–∞–∑—á–∏–∫': 'customer',
            'üë®‚Äçüíº –ú–µ–Ω–µ–¥–∂–µ—Ä': 'manager',
            'üë∑ –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å': 'executor'
        };

        const selectedRole = roleMap[ctx.message.text];
        
        if (!selectedRole) {
            return ctx.reply('‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä —Ä–æ–ª–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
        }

        // –í–∞–ª–∏–¥–∏—Ä—É–µ–º —Ä–æ–ª—å
        const validation = validateRole(selectedRole);
        if (!validation.isValid) {
            return ctx.reply(`‚ùå ${validation.error}`);
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const user = await User.updateMainRole(ctx.from.id, selectedRole);
        
        if (!user) {
            return ctx.reply('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.');
        }

        // –õ–æ–≥–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–æ–ª–∏ (–µ—Å–ª–∏ —ç—Ç–æ –Ω–µ –ø–µ—Ä–≤–æ–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ —Ä–æ–ª–∏)
        if (user.main_role !== selectedRole) {
            const AuditLog = require('../../db/models/AuditLog');
            await AuditLog.create(
                ctx.from.id,
                'ROLE_CHANGE',
                null,
                { 
                    oldRole: user.main_role || 'unknown', 
                    newRole: selectedRole,
                    username: user.username 
                }
            );
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º ctx.user –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã –ø—Ä–æ—Ñ–∏–ª—è
        ctx.user = await User.findByTelegramId(ctx.from.id);

        const roleNames = {
            'customer': '–ó–∞–∫–∞–∑—á–∏–∫',
            'manager': '–ú–µ–Ω–µ–¥–∂–µ—Ä',
            'executor': '–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å'
        };

        await ctx.reply(
            `‚úÖ <b>–†–æ–ª—å —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!</b>\n\n` +
            `–í–∞—à–∞ —Ä–æ–ª—å: <b>${roleNames[selectedRole]}</b>\n\n` +
            `–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏, –¥–æ—Å—Ç—É–ø–Ω—ã–µ –¥–ª—è –≤–∞—à–µ–π —Ä–æ–ª–∏.`,
            {
                parse_mode: 'HTML',
                reply_markup: getKeyboardByRole(selectedRole).reply_markup
            }
        );

    } catch (error) {
        console.error('Error in role selection:', error);
        await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Ä–æ–ª–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    }
};

module.exports = {
    startCommand,
    handleRoleSelection
}; 