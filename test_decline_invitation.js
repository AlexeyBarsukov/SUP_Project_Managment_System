const { Pool } = require('pg');
const pool = new Pool({
    host: 'localhost',
    port: 5432,
    database: 'project_management',
    user: 'postgres',
    password: 'password'
});

async function testDeclineInvitation() {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–∫–∞–∑ –æ—Ç –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞...\n');
    
    try {
        const client = await pool.connect();
        
        // –ü–æ–ª—É—á–∞–µ–º –∑–∞–∫–∞–∑—á–∏–∫–∞
        const customerResult = await client.query(`
            SELECT id, telegram_id, username, first_name, last_name, main_role 
            FROM users 
            WHERE main_role = 'customer' 
            LIMIT 1
        `);
        
        if (customerResult.rows.length === 0) {
            console.log('‚ùå –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ä–æ–ª—å—é customer');
            return;
        }
        
        const customer = customerResult.rows[0];
        console.log('‚úÖ –ó–∞–∫–∞–∑—á–∏–∫:', customer.username);
        
        // –ü–æ–ª—É—á–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä–∞
        const managerResult = await client.query(`
            SELECT id, telegram_id, username, first_name, last_name, main_role
            FROM users 
            WHERE username = 'Aleksey_Barsukov_development'
        `);
        
        if (managerResult.rows.length === 0) {
            console.log('‚ùå –ú–µ–Ω–µ–¥–∂–µ—Ä @Aleksey_Barsukov_development –Ω–µ –Ω–∞–π–¥–µ–Ω');
            return;
        }
        
        const manager = managerResult.rows[0];
        console.log('‚úÖ –ú–µ–Ω–µ–¥–∂–µ—Ä:', manager.username);
        
        // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç
        console.log('\nüìù –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç...');
        const projectData = {
            name: '–¢–µ—Å—Ç –æ—Ç–∫–∞–∑–∞ –æ—Ç –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è',
            description: '–ü—Ä–æ–µ–∫—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–∫–∞–∑–∞ –æ—Ç –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è',
            customer_id: customer.id,
            status: 'searching_manager',
            deadline: '1 –º–µ—Å—è—Ü',
            budget: '80 000 —Ä—É–±–ª–µ–π',
            manager_requirements: '–û–ø—ã—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞–º–∏',
            work_conditions: '–£–¥–∞–ª–µ–Ω–Ω–æ',
            additional_notes: '–¢–µ—Å—Ç –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è'
        };
        
        const createProjectQuery = `
            INSERT INTO projects (name, description, customer_id, status, deadline, budget, manager_requirements, work_conditions, additional_notes)
            VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9)
            RETURNING *
        `;
        
        const createProjectValues = [
            projectData.name,
            projectData.description,
            projectData.customer_id,
            projectData.status,
            projectData.deadline,
            projectData.budget,
            projectData.manager_requirements,
            projectData.work_conditions,
            projectData.additional_notes
        ];
        
        const projectResult = await client.query(createProjectQuery, createProjectValues);
        const project = projectResult.rows[0];
        console.log('‚úÖ –ü—Ä–æ–µ–∫—Ç —Å–æ–∑–¥–∞–Ω —Å ID:', project.id);
        
        // –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ (—Ç–æ–ª—å–∫–æ –≤ project_managers, –ù–ï –≤ project_members)
        console.log('üì® –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞...');
        const inviteQuery = `
            INSERT INTO project_managers (project_id, manager_id, status)
            VALUES ($1, $2, $3)
            ON CONFLICT (project_id, manager_id) DO UPDATE SET status = $3
            RETURNING *
        `;
        const inviteResult = await client.query(inviteQuery, [project.id, manager.id, 'pending']);
        console.log('‚úÖ –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ:', inviteResult.rows[0].id);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        console.log('\nüìä –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞...');
        const initialQuery = `
            SELECT 
                p.id,
                p.name,
                p.status,
                array_agg(DISTINCT pm.role) as member_roles,
                array_agg(DISTINCT pm2.status) as manager_statuses,
                array_agg(DISTINCT pm2.manager_id) as manager_ids
            FROM projects p
            LEFT JOIN project_members pm ON p.id = pm.project_id
            LEFT JOIN project_managers pm2 ON p.id = pm2.project_id
            WHERE p.id = $1
            GROUP BY p.id, p.name, p.status
        `;
        const initialResult = await client.query(initialQuery, [project.id]);
        console.log('–ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:', initialResult.rows[0]);
        
        // –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–µ–Ω–µ–¥–∂–µ—Ä –ù–ï —è–≤–ª—è–µ—Ç—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –ø—Ä–æ–µ–∫—Ç–∞ (—Ç–æ–ª—å–∫–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω)
        console.log('\nüß™ –¢–µ—Å—Ç 1: –ú–µ–Ω–µ–¥–∂–µ—Ä –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –ø—Ä–æ–µ–∫—Ç–∞ (—Ç–æ–ª—å–∫–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω)');
        const memberCheckQuery = `
            SELECT 1 FROM project_members 
            WHERE project_id = $1 AND user_id = $2
        `;
        const memberCheckResult = await client.query(memberCheckQuery, [project.id, manager.id]);
        const isMember = memberCheckResult.rows.length > 0;
        console.log('–ú–µ–Ω–µ–¥–∂–µ—Ä —è–≤–ª—è–µ—Ç—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –ø—Ä–æ–µ–∫—Ç–∞:', isMember);
        
        if (isMember) {
            console.log('‚ùå –ú–µ–Ω–µ–¥–∂–µ—Ä –Ω–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –ø—Ä–æ–µ–∫—Ç–∞ –¥–æ –ø—Ä–∏–Ω—è—Ç–∏—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è');
        } else {
            console.log('‚úÖ –ú–µ–Ω–µ–¥–∂–µ—Ä –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –ø—Ä–æ–µ–∫—Ç–∞ (–ø—Ä–∞–≤–∏–ª—å–Ω–æ)');
        }
        
        // –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–µ–Ω–µ–¥–∂–µ—Ä –∏–º–µ–µ—Ç –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ
        console.log('\nüß™ –¢–µ—Å—Ç 2: –ú–µ–Ω–µ–¥–∂–µ—Ä –∏–º–µ–µ—Ç –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ project_managers');
        const invitationCheckQuery = `
            SELECT * FROM project_managers 
            WHERE project_id = $1 AND manager_id = $2
        `;
        const invitationCheckResult = await client.query(invitationCheckQuery, [project.id, manager.id]);
        
        if (invitationCheckResult.rows.length > 0) {
            const invitation = invitationCheckResult.rows[0];
            console.log('–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–æ:', {
                id: invitation.id,
                status: invitation.status,
                project_id: invitation.project_id,
                manager_id: invitation.manager_id
            });
            
            if (invitation.status === 'pending') {
                console.log('‚úÖ –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ —Å—Ç–∞—Ç—É—Å–µ pending (–ø—Ä–∞–≤–∏–ª—å–Ω–æ)');
            } else {
                console.log('‚ùå –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤ —Å—Ç–∞—Ç—É—Å–µ pending');
            }
        } else {
            console.log('‚ùå –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
            return;
        }
        
        // –°–∏–º—É–ª–∏—Ä—É–µ–º –æ—Ç–∫–∞–∑ –æ—Ç –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
        console.log('\n‚ùå –°–∏–º—É–ª–∏—Ä—É–µ–º –æ—Ç–∫–∞–∑ –æ—Ç –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è...');
        
        // 1. –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –Ω–∞ declined
        const declineQuery = `
            UPDATE project_managers 
            SET status = 'declined' 
            WHERE project_id = $1 AND manager_id = $2
            RETURNING *
        `;
        const declineResult = await client.query(declineQuery, [project.id, manager.id]);
        console.log('‚úÖ –°—Ç–∞—Ç—É—Å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ declined:', declineResult.rows[0].id);
        
        // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–µ–Ω–µ–¥–∂–µ—Ä –≤—Å–µ –µ—â–µ –ù–ï —è–≤–ª—è–µ—Ç—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –ø—Ä–æ–µ–∫—Ç–∞
        const finalMemberCheck = await client.query(memberCheckQuery, [project.id, manager.id]);
        const stillMember = finalMemberCheck.rows.length > 0;
        console.log('–ú–µ–Ω–µ–¥–∂–µ—Ä –≤—Å–µ –µ—â–µ —è–≤–ª—è–µ—Ç—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –ø—Ä–æ–µ–∫—Ç–∞:', stillMember);
        
        if (stillMember) {
            console.log('‚ùå –ú–µ–Ω–µ–¥–∂–µ—Ä –Ω–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –ø—Ä–æ–µ–∫—Ç–∞ –ø–æ—Å–ª–µ –æ—Ç–∫–∞–∑–∞');
        } else {
            console.log('‚úÖ –ú–µ–Ω–µ–¥–∂–µ—Ä –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –ø—Ä–æ–µ–∫—Ç–∞ –ø–æ—Å–ª–µ –æ—Ç–∫–∞–∑–∞ (–ø—Ä–∞–≤–∏–ª—å–Ω–æ)');
        }
        
        // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
        const finalInvitationCheck = await client.query(invitationCheckQuery, [project.id, manager.id]);
        if (finalInvitationCheck.rows.length > 0) {
            const finalInvitation = finalInvitationCheck.rows[0];
            console.log('–§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è:', {
                id: finalInvitation.id,
                status: finalInvitation.status
            });
            
            if (finalInvitation.status === 'declined') {
                console.log('‚úÖ –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ —Å—Ç–∞—Ç—É—Å–µ declined (–ø—Ä–∞–≤–∏–ª—å–Ω–æ)');
            } else {
                console.log('‚ùå –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤ —Å—Ç–∞—Ç—É—Å–µ declined');
            }
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞
        console.log('\nüìä –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞...');
        const finalResult = await client.query(initialQuery, [project.id]);
        console.log('–§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:', finalResult.rows[0]);
        
        // –û—á–∏—Å—Ç–∫–∞
        console.log('\nüßπ –û—á–∏—Å—Ç–∫–∞ - —É–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç...');
        await client.query('DELETE FROM project_managers WHERE project_id = $1', [project.id]);
        await client.query('DELETE FROM project_members WHERE project_id = $1', [project.id]);
        await client.query('DELETE FROM projects WHERE id = $1', [project.id]);
        console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç —É–¥–∞–ª–µ–Ω');
        
        console.log('\nüéâ –¢–µ—Å—Ç –æ—Ç–∫–∞–∑–∞ –æ—Ç –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ!');
        console.log('‚úÖ –ú–µ–Ω–µ–¥–∂–µ—Ä –º–æ–∂–µ—Ç –æ—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è');
        console.log('‚úÖ –°—Ç–∞—Ç—É—Å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è');
        console.log('‚úÖ –ú–µ–Ω–µ–¥–∂–µ—Ä –Ω–µ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –ø—Ä–æ–µ–∫—Ç–∞ –ø—Ä–∏ –æ—Ç–∫–∞–∑–µ');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –æ—Ç–∫–∞–∑–∞ –æ—Ç –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è:', error);
        console.error('Stack trace:', error.stack);
    } finally {
        await pool.end();
    }
}

testDeclineInvitation(); 