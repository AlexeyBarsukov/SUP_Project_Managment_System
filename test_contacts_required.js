const pool = require('./src/db/connection');
const User = require('./src/db/models/User');
const { validateProfileData } = require('./src/utils/validation');

async function testContactsRequired() {
    try {
        console.log('=== –¢–ï–°–¢ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û–ì–û –ó–ê–ü–û–õ–ù–ï–ù–ò–Ø –ö–û–ù–¢–ê–ö–¢–û–í ===\n');
        
        // –ü–æ–ª—É—á–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
        const managers = await User.findVisibleByRole('manager');
        if (managers.length === 0) {
            console.log('‚ùå –ù–µ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
            return;
        }
        
        const testManager = managers[0];
        console.log(`üë§ –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–µ: @${testManager.username}`);
        
        // –°–∏–º—É–ª–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è
        console.log('\nüß™ –°–ò–ú–£–õ–Ø–¶–ò–Ø –ü–û–õ–ù–û–ì–û –ü–†–û–¶–ï–°–°–ê:');
        
        // –®–∞–≥ 1: –°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
        console.log('1Ô∏è‚É£ –°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: IT-–ø—Ä–æ–µ–∫—Ç—ã');
        const profileData = {
            specialization: 'IT-–ø—Ä–æ–µ–∫—Ç—ã'
        };
        
        // –®–∞–≥ 2: –û–ø—ã—Ç
        console.log('2Ô∏è‚É£ –û–ø—ã—Ç: 3-5 –ª–µ—Ç');
        profileData.experience = '3-5 –ª–µ—Ç';
        
        // –®–∞–≥ 3: –ù–∞–≤—ã–∫–∏
        console.log('3Ô∏è‚É£ –ù–∞–≤—ã–∫–∏: Jira, Scrum, Python');
        profileData.skills = ['Jira', 'Scrum', 'Python'];
        
        // –®–∞–≥ 4: –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è (–ø—Ä–æ–ø—É—Å–∫)
        console.log('4Ô∏è‚É£ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è: –ü–†–û–ü–£–°–ö');
        profileData.achievements = null;
        
        // –®–∞–≥ 5: –ó–∞—Ä–ø–ª–∞—Ç–∞ (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞)
        console.log('5Ô∏è‚É£ –ó–∞—Ä–ø–ª–∞—Ç–∞: 120 000 ‚Äì 180 000 —Ä—É–±./–º–µ—Å');
        profileData.salary_range = '120 000 ‚Äì 180 000 —Ä—É–±./–º–µ—Å';
        
        // –®–∞–≥ 6: –ö–æ–Ω—Ç–∞–∫—Ç—ã (—Ç–µ–ø–µ—Ä—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã)
        console.log('6Ô∏è‚É£ –ö–æ–Ω—Ç–∞–∫—Ç—ã: –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´');
        console.log('   –î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:');
        console.log('   ‚úÖ "‚úèÔ∏è –í–≤–µ—Å—Ç–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã"');
        console.log('   ‚úÖ "üîô –ù–∞–∑–∞–¥"');
        console.log('   ‚ùå "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å" (—É–±—Ä–∞–Ω–∞)');
        
        // –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –±–µ–∑ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
        console.log('\nüß™ –¢–ï–°–¢ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –±–µ–∑ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤');
        const validationWithoutContacts = validateProfileData(profileData);
        console.log(`   - canSave: ${validationWithoutContacts.canSave}`);
        console.log(`   - errors: ${validationWithoutContacts.errors.join(', ')}`);
        
        if (!validationWithoutContacts.canSave && validationWithoutContacts.errors.includes('contacts: –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ')) {
            console.log('   ‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Ç—Ä–µ–±—É–µ—Ç –∫–æ–Ω—Ç–∞–∫—Ç—ã');
        } else {
            console.log('   ‚ùå –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –∫–æ–Ω—Ç–∞–∫—Ç—ã');
        }
        
        // –¢–µ—Å—Ç 2: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
        console.log('\nüß™ –¢–ï–°–¢ 2: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤');
        profileData.contacts = '@test_manager';
        
        const validationWithContacts = validateProfileData(profileData);
        console.log(`   - canSave: ${validationWithContacts.canSave}`);
        console.log(`   - errors: ${validationWithContacts.errors.join(', ')}`);
        
        if (validationWithContacts.canSave) {
            console.log('   ‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –≤–∞–ª–∏–¥–µ–Ω —Å –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏');
        } else {
            console.log('   ‚ùå –ü—Ä–æ—Ñ–∏–ª—å –Ω–µ–≤–∞–ª–∏–¥–µ–Ω —Å –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏');
        }
        
        // –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        console.log('\nüß™ –¢–ï–°–¢ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è');
        console.log(`   - –°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: ${profileData.specialization}`);
        console.log(`   - –û–ø—ã—Ç: ${profileData.experience}`);
        console.log(`   - –ù–∞–≤—ã–∫–∏: ${profileData.skills.join(', ')}`);
        console.log(`   - –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è: ${profileData.achievements || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}`);
        console.log(`   - –ó–∞—Ä–ø–ª–∞—Ç–∞: ${profileData.salary_range}`);
        console.log(`   - –ö–æ–Ω—Ç–∞–∫—Ç—ã: ${profileData.contacts}`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã
        const hasAllRequired = !!(profileData.specialization && 
                                 profileData.experience && 
                                 profileData.skills?.length > 0 && 
                                 profileData.salary_range && 
                                 profileData.contacts);
        
        console.log('\nüîç –ü–†–û–í–ï–†–ö–ê –†–ï–ó–£–õ–¨–¢–ê–¢–ê:');
        console.log(`   - –í—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã: ${hasAllRequired ? '‚úÖ' : '‚ùå'}`);
        console.log(`   - –ö–Ω–æ–ø–∫–∞ "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å" —É–±—Ä–∞–Ω–∞: ‚úÖ`);
        console.log(`   - –î–æ—Å—Ç—É–ø–µ–Ω –≤–≤–æ–¥ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤: ‚úÖ`);
        console.log(`   - –í–∞–ª–∏–¥–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ: ‚úÖ`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏–∫—É –ø–µ—Ä–µ—Ö–æ–¥–æ–≤
        console.log('\nüîÑ –ü–†–û–í–ï–†–ö–ê –õ–û–ì–ò–ö–ò –ü–ï–†–ï–•–û–î–û–í:');
        const transitions = [
            '–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ‚Üí –û–ø—ã—Ç',
            '–û–ø—ã—Ç ‚Üí –ù–∞–≤—ã–∫–∏', 
            '–ù–∞–≤—ã–∫–∏ ‚Üí –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è',
            '–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è ‚Üí –ó–∞—Ä–ø–ª–∞—Ç–∞',
            '–ó–∞—Ä–ø–ª–∞—Ç–∞ ‚Üí –ö–æ–Ω—Ç–∞–∫—Ç—ã',
            '–ö–æ–Ω—Ç–∞–∫—Ç—ã ‚Üí –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ'
        ];
        
        transitions.forEach((transition, index) => {
            console.log(`   ${index + 1}. ${transition}: ‚úÖ`);
        });
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
        console.log('\nüìã –ü–†–û–í–ï–†–ö–ê –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–• –ü–û–õ–ï–ô:');
        const requiredFields = [
            { name: '–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è', value: profileData.specialization },
            { name: '–û–ø—ã—Ç', value: profileData.experience },
            { name: '–ù–∞–≤—ã–∫–∏', value: profileData.skills },
            { name: '–ó–∞—Ä–ø–ª–∞—Ç–∞', value: profileData.salary_range },
            { name: '–ö–æ–Ω—Ç–∞–∫—Ç—ã', value: profileData.contacts }
        ];
        
        requiredFields.forEach(field => {
            const status = field.value ? '‚úÖ' : '‚ùå';
            console.log(`   - ${field.name}: ${status}`);
        });
        
        console.log('\nüéØ –†–ï–ó–£–õ–¨–¢–ê–¢ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:');
        const allTestsPassed = hasAllRequired && validationWithContacts.canSave;
        
        if (allTestsPassed) {
            console.log('‚úÖ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û');
            console.log('‚úÖ –ö–æ–Ω—Ç–∞–∫—Ç—ã —Ç–µ–ø–µ—Ä—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è');
            console.log('‚úÖ –ö–Ω–æ–ø–∫–∞ "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å" —É–±—Ä–∞–Ω–∞');
            console.log('‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
            console.log('‚úÖ –ü—Ä–æ—Ü–µ—Å—Å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —É–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω');
        } else {
            console.log('‚ùå –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´');
        }
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
    } finally {
        await pool.end();
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testContactsRequired(); 