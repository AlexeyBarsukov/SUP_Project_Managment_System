const { Pool } = require('pg');
const pool = new Pool({
    host: 'localhost',
    port: 5432,
    database: 'project_management',
    user: 'postgres',
    password: 'password'
});

async function cleanDatabase() {
    console.log('üßπ –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–ª–Ω—É—é –æ—á–∏—Å—Ç–∫—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...\n');
    
    try {
        const client = await pool.connect();
        
        // –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –≤–Ω–µ—à–Ω–∏—Ö –∫–ª—é—á–µ–π –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è
        await client.query('SET session_replication_role = replica;');
        
        console.log('1. –û—á–∏—â–∞–µ–º —Ç–∞–±–ª–∏—Ü—É audit_log...');
        await client.query('DELETE FROM audit_log');
        console.log('‚úÖ audit_log –æ—á–∏—â–µ–Ω–∞');
        
        console.log('2. –û—á–∏—â–∞–µ–º —Ç–∞–±–ª–∏—Ü—É project_messages...');
        await client.query('DELETE FROM project_messages');
        console.log('‚úÖ project_messages –æ—á–∏—â–µ–Ω–∞');
        
        console.log('3. –û—á–∏—â–∞–µ–º —Ç–∞–±–ª–∏—Ü—É executor_applications...');
        await client.query('DELETE FROM executor_applications');
        console.log('‚úÖ executor_applications –æ—á–∏—â–µ–Ω–∞');
        
        console.log('4. –û—á–∏—â–∞–µ–º —Ç–∞–±–ª–∏—Ü—É project_members...');
        await client.query('DELETE FROM project_members');
        console.log('‚úÖ project_members –æ—á–∏—â–µ–Ω–∞');
        
        console.log('5. –û—á–∏—â–∞–µ–º —Ç–∞–±–ª–∏—Ü—É project_roles...');
        await client.query('DELETE FROM project_roles');
        console.log('‚úÖ project_roles –æ—á–∏—â–µ–Ω–∞');
        
        console.log('6. –û—á–∏—â–∞–µ–º —Ç–∞–±–ª–∏—Ü—É manager_invitations...');
        await client.query('DELETE FROM manager_invitations');
        console.log('‚úÖ manager_invitations –æ—á–∏—â–µ–Ω–∞');
        
        console.log('7. –û—á–∏—â–∞–µ–º —Ç–∞–±–ª–∏—Ü—É project_managers...');
        await client.query('DELETE FROM project_managers');
        console.log('‚úÖ project_managers –æ—á–∏—â–µ–Ω–∞');
        
        console.log('8. –û—á–∏—â–∞–µ–º —Ç–∞–±–ª–∏—Ü—É projects...');
        await client.query('DELETE FROM projects');
        console.log('‚úÖ projects –æ—á–∏—â–µ–Ω–∞');
        
        console.log('9. –û—á–∏—â–∞–µ–º —Ç–∞–±–ª–∏—Ü—É users...');
        await client.query('DELETE FROM users');
        console.log('‚úÖ users –æ—á–∏—â–µ–Ω–∞');
        
        // –í–∫–ª—é—á–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ –ø—Ä–æ–≤–µ—Ä–∫—É –≤–Ω–µ—à–Ω–∏—Ö –∫–ª—é—á–µ–π
        await client.query('SET session_replication_role = DEFAULT;');
        
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∞–≤—Ç–æ–∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–Ω—ã–µ —Å—á–µ—Ç—á–∏–∫–∏
        console.log('10. –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∞–≤—Ç–æ–∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–Ω—ã–µ —Å—á–µ—Ç—á–∏–∫–∏...');
        await client.query('ALTER SEQUENCE users_id_seq RESTART WITH 1');
        await client.query('ALTER SEQUENCE projects_id_seq RESTART WITH 1');
        await client.query('ALTER SEQUENCE project_roles_id_seq RESTART WITH 1');
        await client.query('ALTER SEQUENCE executor_applications_id_seq RESTART WITH 1');
        await client.query('ALTER SEQUENCE project_managers_id_seq RESTART WITH 1');
        await client.query('ALTER SEQUENCE manager_invitations_id_seq RESTART WITH 1');
        await client.query('ALTER SEQUENCE project_messages_id_seq RESTART WITH 1');
        await client.query('ALTER SEQUENCE audit_log_id_seq RESTART WITH 1');
        console.log('‚úÖ –°—á–µ—Ç—á–∏–∫–∏ —Å–±—Ä–æ—à–µ–Ω—ã');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã –ø—É—Å—Ç—ã
        console.log('\n11. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–∞–±–ª–∏—Ü...');
        const tables = [
            'users',
            'projects', 
            'project_roles',
            'executor_applications',
            'project_members',
            'project_managers',
            'manager_invitations',
            'project_messages',
            'audit_log'
        ];
        
        for (const table of tables) {
            const result = await client.query(`SELECT COUNT(*) as count FROM ${table}`);
            const count = parseInt(result.rows[0].count);
            console.log(`üìä ${table}: ${count} –∑–∞–ø–∏—Å–µ–π`);
            
            if (count > 0) {
                console.log(`‚ö†Ô∏è  –í —Ç–∞–±–ª–∏—Ü–µ ${table} –æ—Å—Ç–∞–ª–∏—Å—å –∑–∞–ø–∏—Å–∏!`);
            }
        }
        
        console.log('\nüéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω–∞!');
        console.log('‚úÖ –í—Å–µ —Ç–∞–±–ª–∏—Ü—ã –ø—É—Å—Ç—ã');
        console.log('‚úÖ –ê–≤—Ç–æ–∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–Ω—ã–µ —Å—á–µ—Ç—á–∏–∫–∏ —Å–±—Ä–æ—à–µ–Ω—ã');
        console.log('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞ –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
        
        console.log('\nüìù –ß—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ:');
        console.log('‚Ä¢ –£–¥–∞–ª–µ–Ω—ã –≤—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ (–∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–∏, –º–µ–Ω–µ–¥–∂–µ—Ä—ã, –∑–∞–∫–∞–∑—á–∏–∫–∏)');
        console.log('‚Ä¢ –£–¥–∞–ª–µ–Ω—ã –≤—Å–µ –ø—Ä–æ–µ–∫—Ç—ã');
        console.log('‚Ä¢ –£–¥–∞–ª–µ–Ω—ã –≤—Å–µ —Ä–æ–ª–∏ –∏ –≤–∞–∫–∞–Ω—Å–∏–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤');
        console.log('‚Ä¢ –£–¥–∞–ª–µ–Ω—ã –≤—Å–µ –∑–∞—è–≤–∫–∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π');
        console.log('‚Ä¢ –£–¥–∞–ª–µ–Ω—ã –≤—Å–µ —Å–≤—è–∑–∏ –º–µ–∂–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –∏ –ø—Ä–æ–µ–∫—Ç–∞–º–∏');
        console.log('‚Ä¢ –£–¥–∞–ª–µ–Ω—ã –≤—Å–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤');
        console.log('‚Ä¢ –£–¥–∞–ª–µ–Ω—ã –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –ø—Ä–æ–µ–∫—Ç–∞—Ö');
        console.log('‚Ä¢ –£–¥–∞–ª–µ–Ω—ã –≤—Å–µ –∑–∞–ø–∏—Å–∏ –∞—É–¥–∏—Ç–∞');
        console.log('‚Ä¢ –°–±—Ä–æ—à–µ–Ω—ã –≤—Å–µ –∞–≤—Ç–æ–∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–Ω—ã–µ —Å—á–µ—Ç—á–∏–∫–∏');
        
        console.log('\nüöÄ –¢–µ–ø–µ—Ä—å –≤—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –±—É–¥—É—Ç –Ω–∞—á–∏–Ω–∞—Ç—å —Å —á–∏—Å—Ç–æ–≥–æ –ª–∏—Å—Ç–∞!');
        console.log('üîß –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –¥–ª—è –Ω–æ–≤–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', error);
        console.error('Stack trace:', error.stack);
    } finally {
        await pool.end();
    }
}

cleanDatabase(); 