const { Pool } = require('pg');
const pool = require('./src/db/connection');
const User = require('./src/db/models/User');

async function testManagerAccess() {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ—ç—Ç–∞–ø–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤...\n');
    
    try {
        // 1. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Å –Ω–µ–∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–º –ø—Ä–æ—Ñ–∏–ª–µ–º
        console.log('1Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞...');
        const testManager = await User.create('999999999', 'test_manager', '–¢–µ—Å—Ç', '–ú–µ–Ω–µ–¥–∂–µ—Ä', 'manager');
        console.log('‚úÖ –ú–µ–Ω–µ–¥–∂–µ—Ä —Å–æ–∑–¥–∞–Ω:', testManager.first_name, testManager.last_name);
        
        // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç—å –ø—Ä–æ—Ñ–∏–ª—è
        console.log('\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç—å –ø—Ä–æ—Ñ–∏–ª—è...');
        const isComplete = await User.isManagerProfileFullyComplete('999999999');
        console.log('–ü—Ä–æ—Ñ–∏–ª—å –∑–∞–ø–æ–ª–Ω–µ–Ω:', isComplete ? '‚úÖ –î–∞' : '‚ùå –ù–µ—Ç');
        
        // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑–æ–≤—É—é –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç—å
        console.log('\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑–æ–≤—É—é –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç—å...');
        const isBasicComplete = await User.isManagerProfileComplete('999999999');
        console.log('–ë–∞–∑–æ–≤–∞—è –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç—å:', isBasicComplete ? '‚úÖ –î–∞' : '‚ùå –ù–µ—Ç');
        
        // 4. –ó–∞–ø–æ–ª–Ω—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å
        console.log('\n4Ô∏è‚É£ –ó–∞–ø–æ–ª–Ω—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å...');
        const profileData = {
            specialization: 'IT',
            experience: '3-5 –ª–µ—Ç',
            skills: ['–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞–º–∏', 'Agile', 'Scrum'],
            achievements: '–£—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–∏–ª 15+ –ø—Ä–æ–µ–∫—Ç–æ–≤',
            salary_range: '150000-200000',
            contacts: '+7 (999) 123-45-67'
        };
        
        await User.updateManagerProfile('999999999', profileData);
        console.log('‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω');
        
        // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç—å –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        console.log('\n5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç—å –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è...');
        const isCompleteAfter = await User.isManagerProfileFullyComplete('999999999');
        console.log('–ü—Ä–æ—Ñ–∏–ª—å –∑–∞–ø–æ–ª–Ω–µ–Ω:', isCompleteAfter ? '‚úÖ –î–∞' : '‚ùå –ù–µ—Ç');
        
        // 6. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
        console.log('\n6Ô∏è‚É£ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è...');
        await User.setManagerProfileCompleted('999999999');
        console.log('‚úÖ –§–ª–∞–≥ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
        
        // 7. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
        console.log('\n7Ô∏è‚É£ –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞...');
        const finalCheck = await User.isManagerProfileFullyComplete('999999999');
        console.log('–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–ø–æ–ª–Ω–µ–Ω:', finalCheck ? '‚úÖ –î–∞' : '‚ùå –ù–µ—Ç');
        
        // 8. –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        console.log('\n8Ô∏è‚É£ –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏...');
        const profile = await User.getManagerProfile('999999999');
        console.log('–ü—Ä–æ—Ñ–∏–ª—å:', JSON.stringify(profile, null, 2));
        
        console.log('\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.message);
    } finally {
        await pool.end();
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testManagerAccess(); 